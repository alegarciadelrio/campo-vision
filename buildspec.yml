version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12
      nodejs: 16
    commands:
      # Install AWS SAM CLI
      - pip install --upgrade aws-sam-cli
      - sam --version
      
      # Install Python dependencies
      - pip install -r requirements.txt
      
      # Install frontend dependencies if it exists
      - if [ -f "frontend/package.json" ]; then
          cd frontend && npm ci && cd ..;
        fi

  pre_build:
    commands:
      # Install AWS CLI v2
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - ./aws/install -i /usr/local/aws-cli -b /usr/local/bin
      - aws --version
      
      # Set environment variables
      - export AWS_DEFAULT_REGION=$AWS_REGION
      
      # Build frontend if it exists
      - if [ -f "frontend/package.json" ]; then
          cd frontend && npm run build && cd ..;
        fi

  build:
    commands:
      # Build SAM application
      - sam build --use-container
      
      # Run tests if they exist
      - if [ -f "pytest.ini" ]; then
          python -m pytest tests/;
        fi

  post_build:
    commands:
      # Deploy using SAM without S3 artifacts
      - sam deploy --no-confirm-changeset \
          --stack-name $STACK_NAME \
          --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
          --parameter-overrides \
              Environment=$ENVIRONMENT \
              DomainName=$DOMAIN_NAME \
          --region $AWS_REGION \
          --no-fail-on-empty-changeset
      
      # Deploy frontend if it exists
      - if [ -d "frontend/build" ]; then
          aws s3 sync frontend/build s3://$FRONTEND_BUCKET --delete;
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*";
        fi

artifacts:
  type: zip
  files:
    - "**/*"
  base-directory: .aws-sam/build

cache:
  paths:
    - "/root/.cache/pip/**/*"
    - "frontend/node_modules/**/*"
    - "/root/.aws-sam/**/*"
